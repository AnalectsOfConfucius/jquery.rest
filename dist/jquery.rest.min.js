/*! jQuery REST Client - v0.0.2 - 2013-01-18
* https://github.com/jpillora/jquery.rest
* Copyright (c) 2013 Jaime Pillora; Licensed MIT */
(function(){"use strict";var e,t,n,r,i,s,o,u;i=function(e){throw"ERROR: jquery.rest: "+e},s={create:"POST",read:"GET",update:"PUT","delete":"DELETE"},o=function(e){var t;t="",e*=2;while(e-->0)t+=" ";return t},r=function(e){return window.btoa||i("You need a polyfill for 'btoa' to use basic auth."),window.btoa(e)},u=function(e){return window.JSON||i("You need a polyfill for 'JSON' to use stringify."),window.JSON.stringify(e)},e=function(){function e(e){this.parent=e,this.c={}}return e.prototype.valid=function(e){var t;return t=(new Date).getTime()-e.getTime(),t<=this.parent.opts.cache*1e3},e.prototype.key=function(e){return u(e)},e.prototype.get=function(e){var t;t=this.c[e];if(!t)return;if(this.valid(t.entry))return t.data;this.c[e]=null},e.prototype.put=function(e,t){return this.c[e]={entry:new Date,data:t}},e}(),t=function(){function e(e,t,n){var r,o;return e||i("name required"),t||i("type required"),n||i("parent required"),n[e]&&i("cannot add: '"+e+"' as it already exists"),r=!s[e],t=t.toUpperCase(),o=function(){var n,i,s;return s=this.extractUrlData(t,arguments),i=s.url,n=s.data,this.ajax(t,i+(r?e:""),n)},o.isOperation=!0,o.type=t,o}return e}(),n=function(){function n(e,t){t?this.constructChild(e,t):this.constructRoot(e)}return n.prototype.constructRoot=function(t){return $.type(t)==="string"?this.url=t:$.isPlainObject(t)&&$.extend(this.opts,t),this.url||(this.url=this.opts.url),this.urlNoId=this.url,this.cache=new e(this),this.numParents=0,this.root=this,this.name="ROOT"},n.prototype.constructChild=function(e,t){return t instanceof n||i("invalid parent"),e||i("name required"),$.type(e)!=="string"&&i("name must be string"),t[e]&&i("cannot add: '"+e+"' as it already exists"),this.root=t.root,this.opts=this.root.opts,this.name=e,this.numParents=t.numParents+1,this.urlNoId=t.url+(""+this.name+"/"),this.url=this.urlNoId+(":ID_"+this.numParents+"/"),$.each(s,$.proxy(this.add,this)),this.del=this["delete"]},n.prototype.opts={url:"",cache:0,stringifyData:!1,username:null,password:null},n.prototype.add=function(e,r){return r?this[e]=new t(e,r,this):this[e]=new n(e,this),null},n.prototype.show=function(e){var t=this;return e==null&&(e=0),this.name&&console.log(o(e)+this.name+": "+this.url),$.each(this,function(t,n){if(n.isOperation===!0&&t!=="del")return console.log(o(e+1)+n.type+": "+t)}),$.each(this,function(t,r){if(r!=="parent"&&t!=="root"&&r instanceof n)return r.show(e+1)}),null},n.prototype.toString=function(){return this.name},n.prototype.extractUrlData=function(e,t){var n,r,s,o,u,a,f,l,c,h,p,d,v,m;f=[],o=null;for(p=0,v=t.length;p<v;p++)n=t[p],$.type(n)==="string"?f.push(n):$.isPlainObject(n)&&o===null?o=n:i("Invalid parameter: "+n+" ("+$.type(n)+")."+" Must be strings (IDs) and one optional plain object (data).");c=f.length,r=e!=="create",s=e!=="update"&&e!=="delete",r&&c===this.numParents&&(h=this.url),s&&c===this.numParents-1&&(h=this.urlNoId),h||(s&&(l=this.numParents-1),r&&(l=(l?l+" or ":"")+this.numParents),i("Invalid number of ID parameters, required "+l+", provided "+c));for(u=d=0,m=f.length;d<m;u=++d)a=f[u],h=h.replace(new RegExp("/:ID_"+(u+1)+"/"),"/"+a+"/");return{url:h,data:o}},n.prototype.ajax=function(e,t,n,s){var o,a,f,l,c=this;s==null&&(s={}),e||i("type missing"),t||i("url missing"),this.opts.username&&this.opts.password&&(a=r(this.opts.username+":"+this.opts.password),s.Authorization="Basic "+a),n&&this.opts.stringifyData&&(n=u(n)),o={url:t,type:e,headers:s,data:n,processData:!1,dataType:"json"};if(this.opts.cache){f=this.cache.key(o),l=this.cache.get(f);if(l)return l}return l=$.ajax(o),this.opts.cache&&l.complete(function(){return c.cache.put(f,l)}),l},n}(),$.RestClient=n}).call(this);